LIBRARY ieee;
USE ieee.std_logic_1164.ALL;

ENTITY GrayToBinaryConverter IS
    PORT (
        gray_input : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
        binary_output : OUT STD_LOGIC_VECTOR(3 DOWNTO 0)
    );
END ENTITY GrayToBinaryConverter;

ARCHITECTURE Behavioral OF GrayToBinaryConverter IS
    -- 定义格雷码到二进制码的转换函数
    FUNCTION GrayToBinary(gray : STD_LOGIC_VECTOR) RETURN STD_LOGIC_VECTOR IS
        VARIABLE binary : STD_LOGIC_VECTOR(gray'LENGTH - 1 DOWNTO 0) := (OTHERS => '0');
    BEGIN
        FOR i IN binary'LEFT TO binary'RIGHT LOOP
            binary(i) := gray(i) XOR binary(i + 1);
        END LOOP;

        RETURN binary;
    END FUNCTION GrayToBinary;

    -- 定义格雷码到二进制码的转换过程
    PROCEDURE ConvertGrayToBinary(input_gray : IN STD_LOGIC_VECTOR; output_binary : OUT STD_LOGIC_VECTOR) IS
    BEGIN
        output_binary <= GrayToBinary(input_gray);
    END PROCEDURE ConvertGrayToBinary;

BEGIN
    PROCESS (gray_input)
    BEGIN
        ConvertGrayToBinary(gray_input, binary_output);
    END PROCESS;
END ARCHITECTURE Behavioral;